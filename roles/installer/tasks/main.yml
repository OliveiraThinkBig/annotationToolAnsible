---
# installer role

- name: yum update
  shell: "yum -y update"
  become: True 
  become_method: sudo

- name: yum install prereq
  with_items:
    - "java-1.8.0-openjdk"
    - "httpd"
  yum: name={{ item }} state=present
  become: True
  become_method: sudo

- name: yum clean all
  shell: "yum clean all"
  become: True 
  become_method: sudo

- name: Create user annotations
  user:
    name: "{{ annotation_tool.user }}"
    comment: "Annotation tools user"
  become: True
  become_method: sudo

- name: Declare directory for installation
  file:
    path: "{{ annotation_tool.installation_path }}"
    state: "directory"
    mode: "0755"
    owner: "{{ annotation_tool.user }}"
  become: True
  become_method: sudo

- name: Send and unarchive the annotation tool
  unarchive:
    src: "annotation-tool-bankia-3.zip"
    dest: "{{ annotation_tool.installation_path }}"
  become: True
  become_method: sudo

- name: Declare annotations binary as executable
  file:
    path: "{{ annotation_tool.installation_path }}annotation-tool-bankia-3/bin/annotation-tool-bankia"
    mode: "0755"
  become: True 
  become_method: sudo

- name: run htpasswd
  shell: "htpasswd -b -c /etc/httpd/.htpasswd admin {{ admin_http_pass }}"
  become: True 
  become_method: sudo

- name: Declare sites-enabled directory
  file:
    path: "/etc/httpd/sites-enabled/"
    state: "directory"
    mode: "0755"
  become: True 
  become_method: sudo

#- name: Copy proxy config file
#  copy: src="000-default.conf" dest="/etc/httpd/sites-enabled"
- name: Copy proxy config file
  template: src="000-default.conf.j2" dest="/etc/httpd/sites-enabled/000-default.conf"
  become: True
  become_method: sudo
# One of the nice things of Ansible is to be able to think declaratively.
# You should describe how you want the state to be, not the steps to get to that

- name: change listen port on proxy config file
  lineinfile:
    regexp: "Listen {{ httpd.VirtualHostPort }}"
    line: "Listen 0.0.0.0:{{ httpd.VirtualHostPort }}"
    dest: "/etc/httpd/conf/httpd.conf"
  become: True
  become_method: sudo

- name: Declare OptionalIncludes line on httpd conf file
  lineinfile:
    line: "IncludeOptional sites-enabled/*.conf"
    dest: "/etc/httpd/conf/httpd.conf"
  become: True 
  become_method: sudo

- name: Test config.
  shell: /usr/sbin/apachectl configtest
  become: True
  become_method: sudo

#RUN /usr/sbin/apachectl configtest

- name: Copy service file
  template: src=annotations-tool.service.j2 dest="/usr/lib/systemd/system/annotations-tool.service" mode=0644 owner="{{ annotation_tool.user }}" group=root
  become: True
  become_method: sudo

- name: systemctl daemon-reload to make our unit file visible
  shell: "systemctl daemon-reload"
  become: True
  become_method: sudo

- name: enable annotations-tool.service to start at boot
  shell: "systemctl enable annotations-tool"
  become: True
  become_method: sudo

# TODO: There is no init service here. Try using a template and handlers for the service. If not just use the sysctl command, very similar to the last one.

- name: start service annotations-tool.service
  shell: "systemctl start annotations-tool"
  become: True
  become_method: sudo

# start services
...
